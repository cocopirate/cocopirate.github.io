{"categories":[{"title":"爬虫","uri":"https://www.antstu.com/categories/%E7%88%AC%E8%99%AB/"},{"title":"语法","uri":"https://www.antstu.com/categories/%E8%AF%AD%E6%B3%95/"}],"posts":[{"content":"docker部署scrapyd 创建一个文件夹，并在文件夹下创建三个文件：\nDockerfile：通过docker build 制作镜像 scrapyd.conf：scrapyd的配置文件 requestments.txt：相关依赖包，项目会在scrapyd所在环境上运行 Dockerfile FROM python:3.8 WORKDIR /code RUN mkdir ./logs COPY scrapyd.conf /etc/scrapyd/ COPY requirements.txt . EXPOSE 6800 RUN pip3 install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple RUN pip3 install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple # 默认的logs位置是在 /root/logs; RUN mkdir /root/logs CMD logparser -dir ./logs \u0026amp; scrapyd requirements.txt beautifulsoup4==4.11.1 fake-useragent==0.1.11 lxml==4.8.0 pymongo==3.5.0 PyMySQL==1.0.2 pyquery==1.4.3 python-scrapyd-api==2.1.2 redis==4.3.1 requests==2.27.1 Scrapy==2.6.1 scrapy-redis==0.7.2 Scrapy-Redis-BloomFilter==0.8.1 scrapy-splash==0.8.0 scrapyd==1.3.0 logparser==0.8.2 pyopenssl==22.0.0 scrapyd.conf [scrapyd] eggs_dir = eggs logs_dir = logs items_dir = jobs_to_keep = 5 dbs_dir = dbs max_proc = 0 max_proc_per_cpu = 4 finished_to_keep = 100 poll_interval = 5.0 bind_address = 0.0.0.0 http_port = 6800 username = password = debug = off runner = scrapyd.runner jobstorage = scrapyd.jobstorage.MemoryJobStorage application = scrapyd.app.application launcher = scrapyd.launcher.Launcher webroot = scrapyd.website.Root eggstorage = scrapyd.eggstorage.FilesystemEggStorage [services] schedule.json = scrapyd.webservice.Schedule cancel.json = scrapyd.webservice.Cancel addversion.json = scrapyd.webservice.AddVersion listprojects.json = scrapyd.webservice.ListProjects listversions.json = scrapyd.webservice.ListVersions listspiders.json = scrapyd.webservice.ListSpiders delproject.json = scrapyd.webservice.DeleteProject delversion.json = scrapyd.webservice.DeleteVersion listjobs.json = scrapyd.webservice.ListJobs daemonstatus.json = scrapyd.webservice.DaemonStatus 制作镜像和启动容器 # 制作镜像 docker build -t scrapyd . # 启动容器 docker run -d -p 6800:6800 --name scrapyd scrapyd docker部署scrapyweb 创建一个文件夹，并在文件夹下创建三个文件：\nDockerfile：通过docker build 制作镜像 scrapydweb_settings_v10.py：scrapydweb的配置文件，为方便修改使用挂载方式 Dockerfile FROM python:3.10 WORKDIR /code EXPOSE 5000 RUN pip3 install Werkzeug==2.0.3 -i https://pypi.tuna.tsinghua.edu.cn/simple RUN pip3 install scrapydweb -i https://pypi.tuna.tsinghua.edu.cn/simple CMD scrapydweb scrapydweb_settings_v10.py 在宿主机先通过pip install scrapydweb安装scrapydweb，安装后执行scrapydweb生成scrapydweb_settings_v10.py文件，修改文件中的SCRAPYD_SERVERS配置\n# 其他配置... SCRAPYD_SERVERS = [ 'my_scrapyd:6800' # 使用容器的链接配置SCRAPYD_SERVERS地址 ] # 其他配置... 制作镜像和启动容器 将已创建的scrapyd容器与scrapydweb容器链接并命名为my_scrapyd； 将宿主机的/root/scrapydweb目录挂载至容器的code目录，方便配置scrapydweb_settings_v10.py文件。 docker build -t scrapydweb . docker run -d -p 5000:5000 --link scrapyd:my_scrapyd -v /root/scrapydweb:/code --name scrapydweb scrapydweb 其他事项 访问scrapyweb如果出现Http400处理方式：\npip install flask==2.0.2 pip install flask-compress==1.12 在容器中通过scrapydweb命令重启即可。\n","id":0,"section":"posts","summary":"docker部署scrapyd 创建一个文件夹，并在文件夹下创建三个文件： Dockerfile：通过docker build 制作镜像 scrapyd.co","tags":["scrapy","爬虫"],"title":"docker部署scrapyd+scrapyweb","uri":"https://www.antstu.com/2022/11/docker-scrapyd-scrapyweb/","year":"2022"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\n标题 The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\n# H1标题 ## H2标题 ### H3标题 #### H4标题 ##### H5标题 ###### H6标题 段落 Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\n引用 The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\n不注明出处的引用 Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n注明出处的引用 Don\u0026rsquo;t communicate by sharing memory, share memory by communicating. — Rob Pike1\n表格 Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 表格内部使用Markdown Inline Markdown In Table 斜体 加粗 划线 code 代码块 带反引号的代码块 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 缩进四个空格的代码块 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 带有 Hugo 内部高亮简码的代码块 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 列表 有序列表 第一个列表项 第二个列表项 第三个列表项 无序列表 列表项 另一个列表项 还有一个列表项 嵌套列表 项目 第一个子列表项 第二个子列表项 其他元素 — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","id":1,"section":"posts","summary":"\u003cp\u003eThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\u003c/p\u003e","tags":["Markdown","语法"],"title":"Markdown语法教程","uri":"https://www.antstu.com/2021/03/markdown-syntax/","year":"2021"}],"tags":[{"title":"Markdown","uri":"https://www.antstu.com/tags/markdown/"},{"title":"scrapy","uri":"https://www.antstu.com/tags/scrapy/"},{"title":"爬虫","uri":"https://www.antstu.com/tags/%E7%88%AC%E8%99%AB/"},{"title":"语法","uri":"https://www.antstu.com/tags/%E8%AF%AD%E6%B3%95/"}]}